package fetch.api.service.impl;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.HttpMethod;
import org.apache.commons.httpclient.HttpStatus;
import org.apache.commons.httpclient.URIException;
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.httpclient.util.URIUtil;
import org.apache.commons.lang.StringUtils;


import weibo4j.Oauth;
import weibo4j.examples.oauth2.Log;
import weibo4j.http.AccessToken;
import weibo4j.model.WeiboException;
import weibo4j.util.BareBonesBrowserLaunch;

public class OAuthimpl {
	public static AccessToken getAccessToken(String[] args) throws WeiboException, IOException{
		AccessToken accessToken;
		Oauth oauth = new Oauth();
//		BareBonesBrowserLaunch.openURL(oauth.authorize("code",args[0],args[1]));
		Log.logInfo(oauth.authorize("code","",""));
		StringBuffer response = new StringBuffer();
		String queryString=null;
		String charset="UTF-8";
		boolean pretty=true;
		String url= oauth.authorize("code",args[0],args[1]);
		
        HttpClient client = new HttpClient();
        HttpMethod method = new GetMethod(url);
        try {
        		
                if (StringUtils.isNotBlank(queryString))
                        //对get请求参数做了http请求默认编码，好像没有任何问题，汉字编码后，就成为%式样的字符串
                        method.setQueryString(URIUtil.encodeQuery(queryString));
                client.executeMethod(method);
                if (method.getStatusCode() == HttpStatus.SC_OK) {
                        BufferedReader reader = new BufferedReader(new InputStreamReader(method.getResponseBodyAsStream(), charset));
                        String line;
                        while ((line = reader.readLine()) != null) {
                                if (pretty)
                                        response.append(line).append(System.getProperty("line.separator"));
                                else
                                        response.append(line);
                        }
                        reader.close();
                }
        } catch (URIException e) {
                Log.logInfo("执行HTTP Get请求时，编码查询字符串“" + queryString + "”发生异常！");
        } catch (IOException e) {
                Log.logInfo("执行HTTP Get请求" + url + "时，发生异常！");
        } finally {
                method.releaseConnection();
        }
        Log.logInfo(response.toString()); 
		System.out.println(oauth.authorize("code",args[0],args[1]));
		System.out.print("Hit enter when it's done.[Enter]:");
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String code = br.readLine();
		Log.logInfo("code: " + code);
		try{
			accessToken = oauth.getAccessTokenByCode(code);
			Log.logInfo(accessToken.toString());
			return accessToken ;
		} catch (WeiboException e) {
			if(401 == e.getStatusCode()){
				Log.logInfo("Unable to get the access token.");
				return null;
			}else{
				e.printStackTrace();
				return null;
			}
		}
		}
}